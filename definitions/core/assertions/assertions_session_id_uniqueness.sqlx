/*
  This file is part of "GA4 Dataform Package".
  Copyright (C) 2023-2024 Superform Labs <support@ga4dataform.com>
  Artem Korneev, Jules Stuifbergen,
  Johan van de Werken, Kriszti√°n Korpa,
  Simon Breton

  This program is free software: you can redistribute it and/or modify
  it under the terms of the GNU General Public License as published by
  the Free Software Foundation, version 3 of the License.

  This program is distributed in the hope that it will be useful,
  but WITHOUT ANY WARRANTY; without even the implied warranty of
  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  GNU General Public License in the LICENSE.txt file for more details.

  You should have received a copy of the GNU General Public License
  along with this program.  If not, see <https://www.gnu.org/licenses/>.
*/

config {
    type: "table",
    schema: dataform.projectConfig.vars.QUALITY_DATASET,
    description: "session id should be unique",
    dependencies: ["assertion_logs" ,{name:"ga4_sessions"}],
    tags:[dataform.projectConfig.vars.GA4_DATASET, "assertions"],
}
js {
    const { helpers } = require("includes/core/helpers");
    const config = helpers.getConfig();
}

SELECT
  'running assertion' AS placeholder

pre_operations {
  -- declare variables and default value
  DECLARE
    assertion STRING DEFAULT 'session id uniqueness';
  DECLARE
    check INT64;
  DECLARE
    expectations INT64 DEFAULT 0;
  DECLARE
    sample STRING;
  DECLARE
    assertion_status STRING DEFAULT 'pass';
  DECLARE
    error_msg STRING DEFAULT 'Yippee-ki-yay';
    -- run assertion and collect sample of flawed rows
  IF ${config.ASSERTIONS_SESSION_ID_UNIQUENESS}  THEN
  SET
    (check,
      sample) = (
    SELECT
      AS STRUCT COUNT(*),
      STRING_AGG(CAST(session_id AS string), ", "
      LIMIT
        5)
    FROM (
      SELECT
        session_id
      FROM
        ${ref("ga4_sessions")}
      WHERE
        session_date >= DATE_SUB( CURRENT_DATE(), INTERVAL 3 day )
      QUALIFY
        ROW_NUMBER() OVER (PARTITION BY session_id ORDER BY NULL) > 1 ) );
  IF
    check > expectations THEN
  SET
    assertion_status = 'fail';
  SET
    error_msg = FORMAT("%d duplicated session_id(s)", check);
  END IF
    ;
    -- Log assertions
  INSERT INTO
    ${ref("assertion_logs")}
  VALUES
    (CURRENT_TIMESTAMP(), assertion, '${ref("ga4_sessions")}', expectations, check, sample, assertion_status, error_msg);
  END IF
}

post_operations {
  IF ${config.ASSERTIONS_SESSION_ID_UNIQUENESS}  THEN
  -- raise error
    -- drop placeholder table
  DROP TABLE
    ${self()};
  IF
    check > expectations THEN RAISE
  USING
    MESSAGE = error_msg;
  END IF;
  END IF
}
